{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","Chartbar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalmaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","newExpenses","filter","toString","selectedYear","NewForm","enteredTitle","setEnteredTtile","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","showForm","setShowForm","showformHandler","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","NewExpense","enteredExpenseData","expanseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.894d96a4.chunk.js","sourcesContent":["import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', {month:'long'});\r\n    const day = props.date.toLocaleString('en-US', {day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-data__month'>{month}</div>\r\n            <div className='expense-data__day'>{day}</div>\r\n            <div className='expense-data__year'>{year}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\n// this is a wrapper component\r\nfunction Card(props){\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport './ExpenseItem.css';\r\nimport './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nfunction ExpenseItem(props) {\r\n    // first element is current state value, second value is function to update this value\r\n//    const [title, setTitle] =  useState(props.title);    \r\n    return (\r\n    <Card className =\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className ='expense-item__description'>\r\n            <h2>{props.title}</h2>\r\n            <div className = 'expense-item__price'>${props.amount}</div>\r\n        </div>\r\n    </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseItem;","import ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\nconst ExpensesList = props =>{\r\n\r\n    if (props.items.length  === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found no Expenses</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {props.items.map((expense) => (\r\n            <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n            />\r\n        ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropDownChangeHandler = event =>{\r\n    props.onChangeFilter(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ChartBar.css';\r\n\r\nconst Chartbar = props => {\r\n    let barFillHeight = '0%';\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill'\r\n                    style={{ height: barFillHeight }}>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chartbar;","import ChartBar from './ChartBar'\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalmaximum = Math.max(...dataPointValues);\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map(dataPoint => (\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalmaximum}\r\n                    label={dataPoint.label} />\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Chart;","import Chart from '../Chart/Chart';\r\nconst ExpensesChart = props =>{\r\n    const chartDataPoints =[\r\n        { label:'Jan', value:0},\r\n        { label:'Feb', value:0},\r\n        { label:'Mar', value:0},\r\n        { label:'Apr', value:0},\r\n        { label:'May', value:0},\r\n        { label:'Jun', value:0},\r\n        { label:'Jul', value:0},\r\n        { label:'Aug', value:0},\r\n        { label:'Sep', value:0},\r\n        { label:'Oct', value:0},\r\n        { label:'Nov', value:0},\r\n        { label:'Dec', value:0}\r\n    ]\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;","import ExpensesList from './ExpensesList';\r\nimport { useState } from 'react';\r\nimport './Expenses.css'\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n    }\r\n\r\n    let newExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n\r\n    // {newExpenses.length === 0 ? <p>No expenses found</p> : newExpenses.map((expense) => (\r\n    //     <ExpenseItem\r\n    //         key={expense.id}\r\n    //         title={expense.title}\r\n    //         amount={expense.amount}\r\n    //         date={expense.date}\r\n    //     />\r\n    // ))}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className='expenses'>\r\n                <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n                <ExpensesChart expenses={newExpenses} />\r\n                <ExpensesList items={newExpenses}/>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst NewForm = (props) => {\r\n    const [enteredTitle, setEnteredTtile] = useState('')\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n    const titleChangeHandler = (event) =>{\r\n        setEnteredTtile(event.target.value);\r\n    }\r\n\r\n    const amountChangeHandler = (event) =>{\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandler = (event) =>{\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler = event =>{\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        //console.log(expenseData);\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTtile('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n\r\n    }\r\n\r\n    const showformHandler = event =>{\r\n        let flag = !showForm;\r\n        setShowForm(flag);\r\n    }\r\n\r\n    if(!showForm){\r\n        return(\r\n            <div className='no_form'>\r\n                <button className='add_expense' onClick={showformHandler}>Add new Expense</button>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n\r\n                <div className='new-expense__actions'>\r\n                    <button id='cancel' onClick={showformHandler}>Cancel</button>\r\n                    <button type='submit'>Add Expense</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewForm;","import React from 'react';\r\nimport './NewExpense.css';\r\nimport Expenseform from './ExpenseForm';\r\nconst NewExpense = (props) =>{\r\n\r\n    const saveExpenseDataHandler = enteredExpenseData =>{\r\n        const expanseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddExpense(expanseData);\r\n    }\r\n\r\n    return(\r\n        <div className='new-expense'>\r\n            <Expenseform onSaveExpenseData = {saveExpenseDataHandler} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport {useState} from 'react';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  }\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense =>{\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}